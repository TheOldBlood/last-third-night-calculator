{"mappings":"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","sources":["node_modules/@swc/helpers/src/_class_call_check.js","node_modules/@swc/helpers/src/_create_class.js","node_modules/@swc/helpers/src/_iterable_to_array.js","node_modules/@swc/helpers/src/_sliced_to_array.js","node_modules/@swc/helpers/src/_array_with_holes.js","node_modules/@swc/helpers/src/_non_iterable_rest.js","node_modules/@swc/helpers/src/_to_consumable_array.js","node_modules/@swc/helpers/src/_array_without_holes.js","node_modules/@swc/helpers/src/_non_iterable_spread.js","node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/solar-calc/src/solarCalc.js","node_modules/solar-calc/src/sun.js","node_modules/solar-calc/src/moon.js","node_modules/@parcel/runtime-js/lib/helpers/bundle-url.js","node_modules/@parcel/runtime-js/lib/runtime-9a008242f178e6d4.js","node_modules/solar-calc/index.js","code/script.js","node_modules/js-cookie/dist/js.cookie.js","node_modules/@parcel/runtime-js/lib/runtime-2336e45ad80f43af.js"],"sourcesContent":["export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n","import arrayWithHoles from './_array_with_holes';\nimport iterableToArrayLimit from './_iterable_to_array';\nimport nonIterableRest from './_non_iterable_rest';\n\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n","import arrayWithoutHoles from './_array_without_holes';\nimport iterableToArray from './_iterable_to_array';\nimport nonIterableSpread from './_non_iterable_spread';\n\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}\n","export default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n","\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","'use strict';\n\nvar Sun = require('./sun.js');\nvar Moon = require('./moon.js');\n\nconst degreesBelowHorizon = {\n  sunrise: 0.833,\n  sunriseEnd: 0.3,\n  twilight: 6,\n  nauticalTwilight: 12,\n  night: 18,\n  goldenHour: -6\n};\n\nclass SolarCalc {\n  constructor(date, latitude, longitude) {\n    this.date = date;\n    this.lat = latitude;\n    this.longitude = longitude;\n\n    this.sun = new Sun(date, latitude, longitude);\n    this.moon = new Moon(date, latitude, longitude);\n  }\n\n  get solarNoon() {\n    return this.sun.solarNoon;\n  }\n\n  get sunrise() {\n    return this.sun.timeAtAngle(degreesBelowHorizon.sunrise, true);\n  }\n\n  get sunset() {\n    return this.sun.timeAtAngle(degreesBelowHorizon.sunrise);\n  }\n\n  get sunriseEnd() {\n    return this.sun.timeAtAngle(degreesBelowHorizon.sunriseEnd, true);\n  }\n\n  get sunsetStart() {\n    return this.sun.timeAtAngle(degreesBelowHorizon.sunriseEnd, false);\n  }\n\n  get civilDawn() {\n    return this.sun.timeAtAngle(degreesBelowHorizon.twilight, true);\n  }\n\n  get dawn() {\n    return this.civilDawn;\n  }\n\n  get civilDusk() {\n    return this.sun.timeAtAngle(degreesBelowHorizon.twilight, false);\n  }\n\n  get dusk() {\n    return this.civilDusk;\n  }\n\n  get nauticalDawn() {\n    return this.sun.timeAtAngle(degreesBelowHorizon.nauticalTwilight, true);\n  }\n\n  get nauticalDusk() {\n    return this.sun.timeAtAngle(degreesBelowHorizon.nauticalTwilight, false);\n  }\n\n  get nightStart() {\n    return this.astronomicalDusk;\n  }\n\n  get astronomicalDusk() {\n    return this.sun.timeAtAngle(degreesBelowHorizon.night, false);\n  }\n\n  get astronomicalDawn() {\n    return this.sun.timeAtAngle(degreesBelowHorizon.night, true);\n  }\n\n  get nightEnd() {\n    return this.astronomicalDawn;\n  }\n\n  get goldenHourStart() {\n    return this.sun.timeAtAngle(degreesBelowHorizon.goldenHour, false);\n  }\n\n  get goldenHourEnd() {\n    return this.sun.timeAtAngle(degreesBelowHorizon.goldenHour, true);\n  }\n\n  get lunarDistance() {\n    return this.moon.distance;\n  }\n\n  get lunarIlluminosity() {\n    return this.moon.illuminosity;\n  }\n\n  get sunAltitude() {\n    return this.sun.sunAltitude();\n  }\n}\n\nmodule.exports = SolarCalc;\n","'use strict';\n\nclass Sun {\n  constructor(date, latitude, longitude) {\n    this.date = date;\n    this.latitude = latitude;\n    this.longitude = longitude;\n\n    this.julianDate = getJD(date);\n  }\n\n  get solarNoon() {\n    return calcSolNoon(this.julianDate, this.longitude, this.date);\n  }\n\n  timeAtAngle(angle, rising) {\n    return calcSunriseSet(rising, angle, this.julianDate, this.date, this.latitude, this.longitude);\n  }\n\n  sunAltitude() {\n    return calcSunAltitude(this.julianDate, this.latitude);\n  }\n}\n\nvar formatDate = function(date, minutes) {\n  var seconds = (minutes - Math.floor(minutes)) * 60;\n  return new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), 0, minutes, seconds));\n};\n\nfunction calcTimeJulianCent(jd) {\n  var T = (jd - 2451545.0) / 36525.0;\n  return T;\n}\n\nfunction isLeapYear(yr) {\n  return ((yr % 4 === 0 && yr % 100 !== 0) || yr % 400 === 0);\n}\n\nfunction calcDoyFromJD(jd) {\n  var z = Math.floor(jd + 0.5);\n  var f = (jd + 0.5) - z;\n  var A;\n  if (z < 2299161) {\n    A = z;\n  } else {\n    var alpha = Math.floor((z - 1867216.25) / 36524.25);\n    A = z + 1 + alpha - Math.floor(alpha / 4);\n  }\n  var B = A + 1524;\n  var C = Math.floor((B - 122.1) / 365.25);\n  var D = Math.floor(365.25 * C);\n  var E = Math.floor((B - D) / 30.6001);\n  var day = B - D - Math.floor(30.6001 * E) + f;\n  var month = (E < 14) ? E - 1 : E - 13;\n  var year = (month > 2) ? C - 4716 : C - 4715;\n\n  var k = (isLeapYear(year) ? 1 : 2);\n  var doy = Math.floor((275 * month) / 9) - k * Math.floor((month + 9) / 12) + day - 30;\n  return doy;\n}\n\n\nfunction radToDeg(angleRad) {\n  return (180.0 * angleRad / Math.PI);\n}\n\nfunction degToRad(angleDeg) {\n  return (Math.PI * angleDeg / 180.0);\n}\n\nfunction calcGeomMeanLongSun(t) {\n  var L0 = 280.46646 + t * (36000.76983 + t * (0.0003032));\n  while (L0 > 360.0) {\n    L0 -= 360.0;\n  }\n  while (L0 < 0.0) {\n    L0 += 360.0;\n  }\n  return L0; // in degrees\n}\n\nfunction calcGeomMeanAnomalySun(t) {\n  var M = 357.52911 + t * (35999.05029 - 0.0001537 * t);\n  return M; // in degrees\n}\n\nfunction calcEccentricityEarthOrbit(t) {\n  var e = 0.016708634 - t * (0.000042037 + 0.0000001267 * t);\n  return e; // unitless\n}\n\nfunction calcSunEqOfCenter(t) {\n  var m = calcGeomMeanAnomalySun(t);\n  var mrad = degToRad(m);\n  var sinm = Math.sin(mrad);\n  var sin2m = Math.sin(mrad + mrad);\n  var sin3m = Math.sin(mrad + mrad + mrad);\n  var C = sinm * (1.914602 - t * (0.004817 + 0.000014 * t)) + sin2m * (0.019993 - 0.000101 * t) + sin3m * 0.000289;\n  return C; // in degrees\n}\n\nfunction calcSunTrueLong(t) {\n  var l0 = calcGeomMeanLongSun(t);\n  var c = calcSunEqOfCenter(t);\n  var O = l0 + c;\n  return O; // in degrees\n}\n\nfunction calcSunApparentLong(t) {\n  var o = calcSunTrueLong(t);\n  var omega = 125.04 - 1934.136 * t;\n  var lambda = o - 0.00569 - 0.00478 * Math.sin(degToRad(omega));\n  return lambda; // in degrees\n}\n\nfunction calcMeanObliquityOfEcliptic(t) {\n  var seconds = 21.448 - t * (46.8150 + t * (0.00059 - t * (0.001813)));\n  var e0 = 23.0 + (26.0 + (seconds / 60.0)) / 60.0;\n  return e0; // in degrees\n}\n\nfunction calcObliquityCorrection(t) {\n  var e0 = calcMeanObliquityOfEcliptic(t);\n  var omega = 125.04 - 1934.136 * t;\n  var e = e0 + 0.00256 * Math.cos(degToRad(omega));\n  return e; // in degrees\n}\n\nfunction calcSunDeclination(t) {\n  var e = calcObliquityCorrection(t);\n  var lambda = calcSunApparentLong(t);\n\n  var sint = Math.sin(degToRad(e)) * Math.sin(degToRad(lambda));\n  var theta = radToDeg(Math.asin(sint));\n  return theta; // in degrees\n}\n\nfunction calcEquationOfTime(t) {\n  var epsilon = calcObliquityCorrection(t);\n  var l0 = calcGeomMeanLongSun(t);\n  var e = calcEccentricityEarthOrbit(t);\n  var m = calcGeomMeanAnomalySun(t);\n\n  var y = Math.tan(degToRad(epsilon) / 2.0);\n  y *= y;\n\n  var sin2l0 = Math.sin(2.0 * degToRad(l0));\n  var sinm = Math.sin(degToRad(m));\n  var cos2l0 = Math.cos(2.0 * degToRad(l0));\n  var sin4l0 = Math.sin(4.0 * degToRad(l0));\n  var sin2m = Math.sin(2.0 * degToRad(m));\n\n  var Etime = y * sin2l0 - 2.0 * e * sinm + 4.0 * e * y * sinm * cos2l0 - 0.5 * y * y * sin4l0 - 1.25 * e * e * sin2m;\n  return radToDeg(Etime) * 4.0; // in minutes of time\n}\n\nfunction calcHourAngle(angle, lat, solarDec) {\n  var latRad = degToRad(lat);\n  var sdRad = degToRad(solarDec);\n  var HAarg = (Math.cos(degToRad(90 + angle)) / (Math.cos(latRad) * Math.cos(sdRad)) - Math.tan(latRad) * Math.tan(sdRad));\n  var HA = Math.acos(HAarg);\n  return HA; // in radians (for sunset, use -HA)\n}\n\nfunction isNumber(inputVal) {\n  var oneDecimal = false;\n  var inputStr = '' + inputVal;\n  for (var i = 0; i < inputStr.length; i++) {\n    var oneChar = inputStr.charAt(i);\n    if (i === 0 && (oneChar === '-' || oneChar === '+')) {\n      continue;\n    }\n    if (oneChar === '.' && !oneDecimal) {\n      oneDecimal = true;\n      continue;\n    }\n    if (oneChar < '0' || oneChar > '9') {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction getJD(date) {\n  var year = date.getFullYear();\n  var month = date.getMonth() + 1;\n  if (month < 3) {\n    year--;\n    month += 12;\n  }\n  var day = date.getDate();\n\n  var A = Math.floor(year / 100);\n  var B = 2 - A + Math.floor(A / 4);\n  var JD = Math.floor(365.25 * (year + 4716)) + Math.floor(30.6001 * (month + 1)) + day + B - 1524.5;\n  return JD;\n}\n\nfunction calcSolNoon(jd, longitude, date) {\n  var tnoon = calcTimeJulianCent(jd - longitude / 360.0);\n  var eqTime = calcEquationOfTime(tnoon);\n  var solNoonOffset = 720.0 - (longitude * 4) - eqTime; // in minutes\n  var newt = calcTimeJulianCent(jd + solNoonOffset / 1440.0);\n  eqTime = calcEquationOfTime(newt);\n  var solNoonLocal = 720 - (longitude * 4) - eqTime; // in minutes\n  while (solNoonLocal < 0.0) {\n    solNoonLocal += 1440.0;\n  }\n  while (solNoonLocal >= 1440.0) {\n    solNoonLocal -= 1440.0;\n  }\n  return formatDate(date, solNoonLocal);\n  // return timeString(solNoonLocal, 3);\n}\n\nfunction dayString(jd) {\n  if ((jd < 900000) || (jd > 2817000)) {\n    return 'error';\n  } else {\n    var z = Math.floor(jd + 0.5);\n    var f = (jd + 0.5) - z;\n    var A;\n    if (z < 2299161) {\n      A = z;\n    } else {\n      var alpha = Math.floor((z - 1867216.25) / 36524.25);\n      A = z + 1 + alpha - Math.floor(alpha / 4);\n    }\n    var B = A + 1524;\n    var C = Math.floor((B - 122.1) / 365.25);\n    var D = Math.floor(365.25 * C);\n    var E = Math.floor((B - D) / 30.6001);\n    var day = B - D - Math.floor(30.6001 * E) + f;\n    var month = (E < 14) ? E - 1 : E - 13;\n    var year = ((month > 2) ? C - 4716 : C - 4715);\n    return new Date(Date.UTC(year, month - 1, day, 0, 0, 0));\n  }\n}\n\nfunction calcSunriseSetUTC(rise, angle, JD, latitude, longitude) {\n  var t = calcTimeJulianCent(JD);\n  var eqTime = calcEquationOfTime(t);\n  var solarDec = calcSunDeclination(t);\n  var hourAngle = calcHourAngle(angle, latitude, solarDec);\n  //alert(\"HA = \" + radToDeg(hourAngle));\n  if (!rise) hourAngle = -hourAngle;\n  var delta = longitude + radToDeg(hourAngle);\n  var timeUTC = 720 - (4.0 * delta) - eqTime; // in minutes\n  return timeUTC;\n}\n\nfunction calcSunriseSet(rise, angle, JD, date, latitude, longitude)\n  // rise = 1 for sunrise, 0 for sunset\n  {\n    var timeUTC = calcSunriseSetUTC(rise, angle, JD, latitude, longitude);\n    var newTimeUTC = calcSunriseSetUTC(rise, angle, JD + timeUTC / 1440.0, latitude, longitude);\n    if (isNumber(newTimeUTC)) {\n\n      return formatDate(date, newTimeUTC);\n\n    } else { // no sunrise/set found\n      var doy = calcDoyFromJD(JD);\n      var jdy;\n      if (((latitude > 66.4) && (doy > 79) && (doy < 267)) ||\n        ((latitude < -66.4) && ((doy < 83) || (doy > 263)))) { //previous sunrise/next sunset\n        jdy = calcJDofNextPrevRiseSet(!rise, rise, angle, JD, latitude, longitude);\n        return dayString(jdy);\n      } else { //previous sunset/next sunrise\n        jdy = calcJDofNextPrevRiseSet(rise, rise, angle, JD, latitude, longitude);\n        return dayString(jdy);\n      }\n    }\n  }\n\nfunction calcJDofNextPrevRiseSet(next, rise, type, JD, latitude, longitude) {\n  var julianday = JD;\n  var increment = ((next) ? 1.0 : -1.0);\n\n  var time = calcSunriseSetUTC(rise, type, julianday, latitude, longitude);\n  while (!isNumber(time)) {\n    julianday += increment;\n    time = calcSunriseSetUTC(rise, type, julianday, latitude, longitude);\n  }\n\n  return julianday;\n}\n\nfunction calcSunAltitude(jd, latitude) {\n  var doy = calcDoyFromJD(jd);\n  var solarDec = degToRad(-23.45 * Math.cos(degToRad((360 / 365) * (doy + 10))));\n  var angle = 0; // at solar noon\n  var latitude = degToRad(latitude);\n\n  var elevationAngle = Math.asin(Math.sin(solarDec) * Math.sin(latitude) + Math.cos(solarDec) * Math.cos(angle) * Math.cos(latitude));\n  elevationAngle = radToDeg(elevationAngle); // in degrees\n  return elevationAngle;\n}\n\nmodule.exports = Sun;\n","'use strict';\n\nclass Moon {\n  constructor(date, latitude, longitude) {\n    this.date = date;\n    this.latitude = latitude;\n    this.longitude = longitude;\n\n    this.julianDate = getJD(date);\n  }\n\n  get illuminosity() {\n    return moonPhase(this.date) / 360;\n  }\n\n  get distance() {\n    return moonPos(this.date).distance;\n  }\n}\n\n// Utility functions for astronomical programming.\n// JavaScript by Peter Hayes http://www.peter-hayes.freeserve.co.uk/\n// Copyright 2001-2002\n// This code is made freely available but please keep this notice.\n// I accept no liability for any errors in my coding but please\n// let me know of any errors you find. My address is on my home page.\n\nfunction getJD(date) {\n  var year = date.getFullYear();\n  var month = date.getMonth() + 1;\n  var day = date.getDate();\n\n  var A = Math.floor(year / 100);\n  var B = 2 - A + Math.floor(A / 4);\n  var JD = Math.floor(365.25 * (year + 4716)) + Math.floor(30.6001 * (month + 1)) + day + B - 1524.5;\n  return JD;\n}\n\n\n// function dayno(year, month, day, hours) {\n//   // Day number is a modified Julian date, day 0 is 2000 January 0.0\n//   // which corresponds to a Julian date of 2451543.5\n//   var A = Math.floor(year / 100);\n//   var B = 2 - A + Math.floor(A / 4);\n//   var JD = Math.floor(365.25 * (year + 4716)) + Math.floor(30.6001 * (month + 1)) + day + B - 1524.5 + hours;\n//   return JD;\n// }\n\n// function julian(year, month, day, hours) {\n//   return dayno(year, month, day, hours) + 2451543.5;\n// }\n\n// function jdtocd(jd) {\n//   // The calendar date from julian date\n//   // Returns year, month, day, day of week, hours, minutes, seconds\n//   var Z = Math.floor(jd + 0.5);\n//   var F = jd + 0.5 - Z;\n//   if (Z < 2299161) {\n//     var A = Z;\n//   } else {\n//     var alpha = Math.floor((Z - 1867216.25) / 36524.25);\n//     var A = Z + 1 + alpha - Math.floor(alpha / 4);\n//   }\n//   var B = A + 1524;\n//   var C = Math.floor((B - 122.1) / 365.25);\n//   var D = Math.floor(365.25 * C);\n//   var E = Math.floor((B - D) / 30.6001);\n//   var d = B - D - Math.floor(30.6001 * E) + F;\n//   if (E < 14) {\n//     var month = E - 1;\n//   } else {\n//     var month = E - 13;\n//   }\n//   if (month > 2) {\n//     var year = C - 4716;\n//   } else {\n//     var year = C - 4715;\n//   }\n//   var day = Math.floor(d);\n//   var h = (d - day) * 24;\n//   var hours = Math.floor(h);\n//   var m = (h - hours) * 60;\n//   var minutes = Math.floor(m);\n//   var seconds = Math.round((m - minutes) * 60);\n//   if (seconds >= 60) {\n//     minutes = minutes + 1;\n//     seconds = seconds - 60;\n//   }\n//   if (minutes >= 60) {\n//     hours = hours + 1;\n//     minutes = 0;\n//   }\n//   var dw = Math.floor(jd + 1.5) - 7 * Math.floor((jd + 1.5) / 7);\n//   return [year, month, day, dw, hours, minutes, seconds];\n// }\n\n// function local_sidereal(year, month, day, hours, lon) {\n//   // Compute local siderial time in degrees\n//   // year, month, day and hours are the Greenwich date and time\n//   // lon is the observers longitude\n//   var d = dayno(year, month, day, hours);\n//   var lst = (98.9818 + 0.985647352 * d + hours * 15 + lon);\n//   return rev(lst) / 15;\n// }\n\n// function radtoaa(ra, dec, year, month, day, hours, lat, lon) {\n//   // convert ra and dec to altitude and azimuth\n//   // year, month, day and hours are the Greenwich date and time\n//   // lat and lon are the observers latitude and longitude\n//   var lst = local_sidereal(year, month, day, hours, lon);\n//   var x = cosd(15.0 * (lst - ra)) * cosd(dec);\n//   var y = sind(15.0 * (lst - ra)) * cosd(dec);\n//   var z = sind(dec);\n//   // rotate so z is the local zenith\n//   var xhor = x * sind(lat) - z * cosd(lat);\n//   var yhor = y;\n//   var zhor = x * cosd(lat) + z * sind(lat);\n//   var azimuth = rev(atan2d(yhor, xhor) + 180.0); // so 0 degrees is north\n//   var altitude = atan2d(zhor, Math.sqrt(xhor * xhor + yhor * yhor));\n//   return [altitude, azimuth];\n// }\n\n\n// Extensions to the Math routines - Trig routines in degrees\n// JavaScript by Peter Hayes http://www.peter-hayes.freeserve.co.uk/\n// Copyright 2001-2002\n\nfunction rev(angle) {\n  return angle - Math.floor(angle / 360.0) * 360.0;\n}\n\nfunction sind(angle) {\n  return Math.sin((angle * Math.PI) / 180.0);\n}\n\nfunction cosd(angle) {\n  return Math.cos((angle * Math.PI) / 180.0);\n}\n\nfunction tand(angle) {\n  return Math.tan((angle * Math.PI) / 180.0);\n}\n\nfunction asind(c) {\n  return (180.0 / Math.PI) * Math.asin(c);\n}\n\n// function acosd(c) {\n//   return (180.0 / Math.PI) * Math.acos(c);\n// }\n\nfunction atan2d(y, x) {\n  return (180.0 / Math.PI) * Math.atan(y / x) - 180.0 * (x < 0);\n}\n\n// function anglestring(a, circle) {\n//   // returns a in degrees as a string degrees:minutes\n//   // circle is true for range between 0 and 360 and false for -90 to +90\n//   var ar = Math.round(a * 60) / 60;\n//   var deg = Math.abs(ar);\n//   var min = Math.round(60.0 * (deg - Math.floor(deg)));\n//   if (min >= 60) {\n//     deg += 1;\n//     min = 0;\n//   }\n//   var anglestr = \"\";\n//   if (!circle) anglestr += (ar < 0 ? \"-\" : \"+\");\n//   if (circle) anglestr += ((Math.floor(deg) < 100) ? \"0\" : \"\");\n//   anglestr += ((Math.floor(deg) < 10) ? \"0\" : \"\") + Math.floor(deg);\n//   anglestr += ((min < 10) ? \":0\" : \":\") + (min);\n//   return anglestr;\n// }\n\n\n\n// JavaScript by Peter Hayes http://www.aphayes.pwp.blueyonder.co.uk/\n// Copyright 2001-2010\n// Unless otherwise stated this code is based on the methods in\n// Astronomical Algorithms, first edition, by Jean Meeus\n// Published by Willmann-Bell, Inc.\n// This code is made freely available but please keep this notice.\n// The calculations are approximate but should be good enough for general use,\n// I accept no responsibility for errors in astronomy or coding.\n\n// WARNING moonrise code changed on 6 May 2003 to correct a systematic error\n// these are now local times NOT UTC as the original code did.\n\n// Meeus first edition table 45.A Longitude and distance of the moon\n\nvar T45AD = [0, 2, 2, 0, 0, 0, 2, 2, 2, 2,\n  0, 1, 0, 2, 0, 0, 4, 0, 4, 2,\n  2, 1, 1, 2, 2, 4, 2, 0, 2, 2,\n  1, 2, 0, 0, 2, 2, 2, 4, 0, 3,\n  2, 4, 0, 2, 2, 2, 4, 0, 4, 1,\n  2, 0, 1, 3, 4, 2, 0, 1, 2, 2];\n\nvar T45AM = [0, 0, 0, 0, 1, 0, 0, -1, 0, -1,\n  1, 0, 1, 0, 0, 0, 0, 0, 0, 1,\n  1, 0, 1, -1, 0, 0, 0, 1, 0, -1,\n  0, -2, 1, 2, -2, 0, 0, -1, 0, 0,\n  1, -1, 2, 2, 1, -1, 0, 0, -1, 0,\n  1, 0, 1, 0, 0, -1, 2, 1, 0, 0];\n\nvar T45AMP = [1, -1, 0, 2, 0, 0, -2, -1, 1, 0, -1, 0, 1, 0, 1, 1, -1, 3, -2, -1,\n  0, -1, 0, 1, 2, 0, -3, -2, -1, -2,\n  1, 0, 2, 0, -1, 1, 0, -1, 2, -1,\n  1, -2, -1, -1, -2, 0, 1, 4, 0, -2,\n  0, 2, 1, -2, -3, 2, 1, -1, 3, -1];\n\nvar T45AF = [0, 0, 0, 0, 0, 2, 0, 0, 0, 0,\n  0, 0, 0, -2, 2, -2, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 2, 0,\n  0, 0, 0, 0, 0, -2, 2, 0, 2, 0,\n  0, 0, 0, 0, 0, -2, 0, 0, 0, 0, -2, -2, 0, 0, 0, 0, 0, 0, 0, -2];\n\nvar T45AL = [6288774, 1274027, 658314, 213618, -185116, -114332, 58793, 57066, 53322, 45758, -40923, -34720, -30383, 15327, -12528,\n  10980, 10675, 10034, 8548, -7888, -6766, -5163, 4987, 4036, 3994,\n  3861, 3665, -2689, -2602, 2390, -2348, 2236, -2120, -2069, 2048, -1773, -1595, 1215, -1110, -892, -810, 759, -713, -700, 691,\n  596, 549, 537, 520, -487, -399, -381, 351, -340, 330,\n  327, -323, 299, 294, 0];\n\nvar T45AR = [-20905355, -3699111, -2955968, -569925, 48888, -3149, 246158, -152138, -170733, -204586, -129620, 108743, 104755, 10321, 0,\n  79661, -34782, -23210, -21636, 24208,\n  30824, -8379, -16675, -12831, -10445, -11650, 14403, -7003, 0, 10056,\n  6322, -9884, 5751, 0, -4950,\n  4130, 0, -3958, 0, 3258,\n  2616, -1897, -2117, 2354, 0,\n  0, -1423, -1117, -1571, -1739,\n  0, -4421, 0, 0, 0,\n  0, 1165, 0, 0, 8752];\n\n// Meeus table 45B latitude of the moon\n\nvar T45BD = [0, 0, 0, 2, 2, 2, 2, 0, 2, 0,\n  2, 2, 2, 2, 2, 2, 2, 0, 4, 0,\n  0, 0, 1, 0, 0, 0, 1, 0, 4, 4,\n  0, 4, 2, 2, 2, 2, 0, 2, 2, 2,\n  2, 4, 2, 2, 0, 2, 1, 1, 0, 2,\n  1, 2, 0, 4, 4, 1, 4, 1, 4, 2];\n\nvar T45BM = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 1, -1, -1, -1, 1, 0, 1,\n  0, 1, 0, 1, 1, 1, 0, 0, 0, 0,\n  0, 0, 0, 0, -1, 0, 0, 0, 0, 1,\n  1, 0, -1, -2, 0, 1, 1, 1, 1, 1,\n  0, -1, 1, 0, -1, 0, 0, 0, -1, -2];\n\nvar T45BMP = [0, 1, 1, 0, -1, -1, 0, 2, 1, 2,\n  0, -2, 1, 0, -1, 0, -1, -1, -1, 0,\n  0, -1, 0, 1, 1, 0, 0, 3, 0, -1,\n  1, -2, 0, 2, 1, -2, 3, 2, -3, -1,\n  0, 0, 1, 0, 1, 1, 0, 0, -2, -1,\n  1, -2, 2, -2, -1, 1, 1, -1, 0, 0];\n\nvar T45BF = [1, 1, -1, -1, 1, -1, 1, 1, -1, -1, -1, -1, 1, -1, 1, 1, -1, -1, -1, 1,\n  3, 1, 1, 1, -1, -1, -1, 1, -1, 1, -3, 1, -3, -1, -1, 1, -1, 1, -1, 1,\n  1, 1, 1, -1, 3, -1, -1, 1, -1, -1,\n  1, -1, 1, -1, -1, -1, -1, -1, -1, 1];\n\nvar T45BL = [5128122, 280602, 277693, 173237, 55413,\n  46271, 32573, 17198, 9266, 8822,\n  8216, 4324, 4200, -3359, 2463,\n  2211, 2065, -1870, 1828, -1794, -1749, -1565, -1491, -1475, -1410, -1344, -1335, 1107, 1021, 833,\n  777, 671, 607, 596, 491, -451, 439, 422, 421, -366, -351, 331, 315, 302, -283, -229, 223, 223, -220, -220, -185, 181, -177, 176, 166, -164, 132, -119, 115, 107];\n\n// MoonPos calculates the Moon position, based on Meeus chapter 45\n\nfunction moonPos(date) {\n  // julian date\n  var jd = getJD(date) + 2451543.5;\n  var T = (jd - 2451545.0) / 36525;\n  var T2 = T * T;\n  var T3 = T2 * T;\n  var T4 = T3 * T;\n  // Moons mean longitude L'\n  var LP = 218.3164477 + 481267.88123421 * T - 0.0015786 * T2 + T3 / 538841.0 - T4 / 65194000.0;\n  // Moons mean elongation\n  var D = 297.8501921 + 445267.1114034 * T - 0.0018819 * T2 + T3 / 545868.0 - T4 / 113065000.0;\n  // Suns mean anomaly\n  var M = 357.5291092 + 35999.0502909 * T - 0.0001536 * T2 + T3 / 24490000.0;\n  // Moons mean anomaly M'\n  var MP = 134.9633964 + 477198.8675055 * T + 0.0087414 * T2 + T3 / 69699.0 - T4 / 14712000.0;\n  // Moons argument of latitude\n  var F = 93.2720950 + 483202.0175233 * T - 0.0036539 * T2 - T3 / 3526000.0 + T4 / 863310000.0;\n\n  // Additional arguments\n  var A1 = 119.75 + 131.849 * T;\n  var A2 = 53.09 + 479264.290 * T;\n  var A3 = 313.45 + 481266.484 * T;\n  var E = 1 - 0.002516 * T - 0.0000074 * T2;\n  var E2 = E * E;\n  // Sums of periodic terms from table 45.A and 45.B\n  var Sl = 0.0;\n  var Sr = 0.0;\n  for (var i = 0; i < 60; i++) {\n    var Eterm = 1;\n    if (Math.abs(T45AM[i]) === 1) Eterm = E;\n    if (Math.abs(T45AM[i]) === 2) Eterm = E2;\n    Sl += T45AL[i] * Eterm * sind(rev(T45AD[i] * D + T45AM[i] * M + T45AMP[i] * MP + T45AF[i] * F));\n    Sr += T45AR[i] * Eterm * cosd(rev(T45AD[i] * D + T45AM[i] * M + T45AMP[i] * MP + T45AF[i] * F));\n  }\n  var Sb = 0.0;\n  for (var i = 0; i < 60; i++) {\n    var Eterm = 1;\n    if (Math.abs(T45BM[i]) === 1) Eterm = E;\n    if (Math.abs(T45BM[i]) === 2) Eterm = E2;\n    Sb += T45BL[i] * Eterm * sind(rev(T45BD[i] * D + T45BM[i] * M + T45BMP[i] * MP + T45BF[i] * F));\n  }\n  // Additional additive terms\n  Sl = Sl + 3958 * sind(rev(A1)) + 1962 * sind(rev(LP - F)) + 318 * sind(rev(A2));\n  Sb = Sb - 2235 * sind(rev(LP)) + 382 * sind(rev(A3)) + 175 * sind(rev(A1 - F)) +\n    175 * sind(rev(A1 + F)) + 127 * sind(rev(LP - MP)) - 115 * sind(rev(LP + MP));\n  // geocentric longitude, latitude and distance\n  var mglong = rev(LP + Sl / 1000000.0);\n  var mglat = rev(Sb / 1000000.0);\n  if (mglat > 180.0) mglat = mglat - 360;\n  var mr = Math.round(385000.56 + Sr / 1000.0);\n  // Obliquity of Ecliptic\n  var obl = 23.4393 - 3.563E-9 * (jd - 2451543.5);\n  // RA and dec\n  var ra = rev(atan2d(sind(mglong) * cosd(obl) - tand(mglat) * sind(obl),\n    cosd(mglong))) / 15.0;\n  var dec = rev(asind(sind(mglat) * cosd(obl) + cosd(mglat) * sind(obl) * sind(mglong)));\n  if (dec > 180.0) dec = dec - 360;\n  return {\n    ra: ra,\n    dec: dec,\n    distance: mr\n  };\n}\n\n// function MoonRise(year, month, day, TZ, latitude, longitude) {\n//   // returns an array containing rise and set times or one of the\n//   // following codes.\n//   // -1 rise or set event not found and moon was down at 00:00\n//   // -2 rise or set event not found and moon was up   at 00:00\n//   // WARNING code changes on 6/7 May 2003 these are now local times\n//   // NOT UTC and rise/set not found codes changed.\n//   var hours = 0;\n//   var riseset = [];\n//   // elh is the elevation at the hour elhdone is true if elh calculated\n//   var elh = [];\n//   var elhdone = [];\n//   for (var i = 0; i <= 24; i++) {\n//     elhdone[i] = false;\n//   }\n//   // Compute the moon elevation at start and end of day\n//   // store elevation at the hours in an array elh to save search time\n//   var rad = MoonPos(year, month, day, hours - TZ);\n//   var altaz = radtoaa(rad[0], rad[1], year, month, day, hours - TZ, latitude, longitude);\n//   elh[0] = altaz[0];\n//   elhdone[0] = true;\n//   // set the return code to allow for always up or never rises\n//   if (elh[0] > 0.0) {\n//     riseset = [-2, -2];\n//   } else {\n//     riseset = [-1, -1];\n//   }\n//   hours = 24;\n//   rad = MoonPos(year, month, day, hours - TZ);\n//   altaz = radtoaa(rad[0], rad[1], year, month, day, hours - TZ, latitude, longitude);\n//   elh[24] = altaz[0];\n//   elhdone[24] = true;\n//   // search for moonrise and set\n//   for (var rise = 0; rise < 2; rise++) {\n//     var found = false;\n//     var hfirst = 0;\n//     var hlast = 24;\n//     // Try a binary chop on the hours to speed the search\n//     while (Math.ceil((hlast - hfirst) / 2) > 1) {\n//       hmid = hfirst + Math.round((hlast - hfirst) / 2);\n//       if (!elhdone[hmid]) {\n//         hours = hmid;\n//         rad = MoonPos(year, month, day, hours - TZ);\n//         altaz = radtoaa(rad[0], rad[1], year, month, day, hours - TZ, latitude, longitude);\n//         elh[hmid] = altaz[0];\n//         elhdone[hmid] = true;\n//       }\n//       if (((rise === 0) && (elh[hfirst] <= 0.0) && (elh[hmid] >= 0.0)) ||\n//         ((rise === 1) && (elh[hfirst] >= 0.0) && (elh[hmid] <= 0.0))) {\n//         hlast = hmid;\n//         found = true;\n//         continue;\n//       }\n//       if (((rise === 0) && (elh[hmid] <= 0.0) && (elh[hlast] >= 0.0)) ||\n//         ((rise === 1) && (elh[hmid] >= 0.0) && (elh[hlast] <= 0.0))) {\n//         hfirst = hmid;\n//         found = true;\n//         continue;\n//       }\n//       break;\n//     }\n//     // If the binary chop did not find a 1 hour interval\n//     if ((hlast - hfirst) > 1) {\n//       for (var i = hfirst; i < hlast; i++) {\n//         found = false;\n//         if (!elhdone[i + 1]) {\n//           hours = i + 1;\n//           rad = MoonPos(year, month, day, hours - TZ);\n//           altaz = radtoaa(rad[0], rad[1], year, month, day, hours - TZ, latitude, longitude);\n//           elh[hours] = altaz[0];\n//           elhdone[hours] = true;\n//         }\n//         if (((rise === 0) && (elh[i] <= 0.0) && (elh[i + 1] >= 0.0)) ||\n//           ((rise === 1) && (elh[i] >= 0.0) && (elh[i + 1] <= 0.0))) {\n//           hfirst = i;\n//           hlast = i + 1;\n//           found = true;\n//           break;\n//         }\n//       }\n//     }\n//     // simple linear interpolation for the minutes\n//     if (found) {\n//       var elfirst = elh[hfirst];\n//       var ellast = elh[hlast];\n//       hours = hfirst + 0.5;\n//       rad = MoonPos(year, month, day, hours - TZ);\n//       altaz = radtoaa(rad[0], rad[1], year, month, day, hours - TZ, latitude, longitude);\n//       // alert(\"day =\"+day+\" hour =\"+hours+\" altaz=\"+altaz[0]+\" \"+altaz[1]);\n//       if ((rise == 0) && (altaz[0] <= 0.0)) {\n//         hfirst = hours;\n//         elfirst = altaz[0];\n//       }\n//       if ((rise == 0) && (altaz[0] > 0.0)) {\n//         hlast = hours;\n//         ellast = altaz[0];\n//       }\n//       if ((rise == 1) && (altaz[0] <= 0.0)) {\n//         hlast = hours;\n//         ellast = altaz[0];\n//       }\n//       if ((rise === 1) && (altaz[0] > 0.0)) {\n//         hfirst = hours;\n//         elfirst = altaz[0];\n//       }\n//       var eld = Math.abs(elfirst) + Math.abs(ellast);\n//       riseset[rise] = hfirst + (hlast - hfirst) * Math.abs(elfirst) / eld;\n//     }\n//   } // End of rise/set loop\n//   return (riseset);\n// }\n\nfunction moonPhase(date) {\n  // the illuminated percentage from Meeus chapter 46\n  var j = getJD(date) + 2451543.5;\n  var T = (j - 2451545.0) / 36525;\n  var T2 = T * T;\n  var T3 = T2 * T;\n  var T4 = T3 * T;\n  // Moons mean elongation Meeus first edition\n  // var D=297.8502042+445267.1115168*T-0.0016300*T2+T3/545868.0-T4/113065000.0;\n  // Moons mean elongation Meeus second edition\n  var D = 297.8501921 + 445267.1114034 * T - 0.0018819 * T2 + T3 / 545868.0 - T4 / 113065000.0;\n  // Moons mean anomaly M' Meeus first edition\n  // var MP=134.9634114+477198.8676313*T+0.0089970*T2+T3/69699.0-T4/14712000.0;\n  // Moons mean anomaly M' Meeus second edition\n  var MP = 134.9633964 + 477198.8675055 * T + 0.0087414 * T2 + T3 / 69699.0 - T4 / 14712000.0;\n  // Suns mean anomaly\n  var M = 357.5291092 + 35999.0502909 * T - 0.0001536 * T2 + T3 / 24490000.0;\n  // phase angle\n  var pa = 180.0 - D - 6.289 * sind(MP) + 2.1 * sind(M) - 1.274 * sind(2 * D - MP) - 0.658 * sind(2 * D) - 0.214 * sind(2 * MP) - 0.11 * sind(D);\n  return (rev(pa));\n}\n\n// function MoonQuarters(year, month, day) {\n//   // returns an array of Julian Ephemeris Days (JDE) for\n//   // new moon, first quarter, full moon and last quarter\n//   // Meeus first edition chapter 47 with only the most larger additional corrections\n//   // Meeus code calculate Terrestrial Dynamic Time\n//   // TDT = UTC + (number of leap seconds) + 32.184\n//   // At the end of June 2012 the 25th leap second was added\n//   //\n//   var quarters = [];\n//   // k is an integer for new moon incremented by 0.25 for first quarter 0.5 for new etc.\n//   var k = Math.floor((year + ((month - 1) + day / 30) / 12 - 2000) * 12.3685);\n//   // Time in Julian centuries since 2000.0\n//   var T = k / 1236.85;\n//   // Sun's mean anomaly\n//   var M = rev(2.5534 + 29.10535669 * k - 0.0000218 * T * T);\n//   // Moon's mean anomaly (M' in Meeus)\n//   var MP = rev(201.5643 + 385.81693528 * k + 0.0107438 * T * T + 0.00001239 * T * T * T - 0.00000011 * T * T * T);\n//   var E = 1 - 0.002516 * T - 0.0000074 * T * T;\n//   // Moons argument of latitude\n//   var F = rev(160.7108 + 390.67050274 * k - 0.0016341 * T * T - 0.00000227 * T * T * T + 0.000000011 * T * T * T * T);\n//   // Longitude of ascending node of lunar orbit\n//   var Omega = rev(124.7746 - 1.56375580 * k + 0.0020691 * T * T + 0.00000215 * T * T * T);\n//   // The full planetary arguments include 14 terms, only used the 7 most significant\n//   var A = [];\n//   A[1] = rev(299.77 + 0.107408 * k - 0.009173 * T * T);\n//   A[2] = rev(251.88 + 0.016321 * k);\n//   A[3] = rev(251.83 + 26.651886 * k);\n//   A[4] = rev(349.42 + 36.412478 * k);\n//   A[5] = rev(84.88 + 18.206239 * k);\n//   A[6] = rev(141.74 + 53.303771 * k);\n//   A[7] = rev(207.14 + 2.453732 * k);\n\n//   // New moon\n//   var JDE0 = 2451550.09765 + 29.530588853 * k + 0.0001337 * T * T - 0.000000150 * T * T * T + 0.00000000073 * T * T * T * T;\n//   // Correct for TDT since 1 July 2012\n//   JDE0 = JDE0 - 57.184 / (24 * 60 * 60);\n//   var JDE = JDE0 - 0.40720 * sind(MP) + 0.17241 * E * sind(M) + 0.01608 * sind(2 * MP) + 0.01039 * sind(2 * F) + 0.00739 * E * sind(MP - M) - 0.00514 * E * sind(MP + M) + 0.00208 * E * E * sind(2 * M) - 0.00111 * sind(MP - 2 * F) - 0.00057 * sind(MP + 2 * F) + 0.00056 * E * sind(2 * MP + M) - 0.00042 * sind(3 * MP) + 0.00042 * E * sind(M + 2 * F) + 0.00038 * E * sind(M - 2 * F) - 0.00024 * E * sind(2 * MP - M) - 0.00017 * sind(Omega) - 0.00007 * sind(MP + 2 * M);\n\n//   quarters[0] = JDE + 0.000325 * sind(A[1]) + 0.000165 * sind(A[2]) + 0.000164 * sind(A[3]) + 0.000126 * sind(A[4]) + 0.000110 * sind(A[5]) + 0.000062 * sind(A[6]) + 0.000060 * sind(A[7]);\n\n//   // The following code needs tidying up with a loop and conditionals for each quarter\n//   // First Quarter k=k+0.25\n//   JDE = JDE0 + 29.530588853 * 0.25;\n//   M = rev(M + 29.10535669 * 0.25);\n//   MP = rev(MP + 385.81693528 * 0.25);\n//   F = rev(F + 390.67050274 * 0.25);\n//   Omega = rev(Omega - 1.56375580 * 0.25);\n//   A[1] = rev(A[1] + 0.107408 * 0.25);\n//   A[2] = rev(A[2] + 0.016321 * 0.25);\n//   A[3] = rev(A[3] + 26.651886 * 0.25);\n//   A[4] = rev(A[4] + 36.412478 * 0.25);\n//   A[5] = rev(A[5] + 18.206239 * 0.25);\n//   A[6] = rev(A[6] + 53.303771 * 0.25);\n//   A[7] = rev(A[7] + 2.453732 * 0.25);\n\n//   JDE = JDE - 0.62801 * sind(MP) + 0.17172 * E * sind(M) - 0.01183 * E * sind(MP + M) + 0.00862 * sind(2 * MP) + 0.00804 * sind(2 * F) + 0.00454 * E * sind(MP - M) + 0.00204 * E * E * sind(2 * M) - 0.00180 * sind(MP - 2 * F) - 0.00070 * sind(MP + 2 * F) - 0.00040 * sind(3 * MP) - 0.00034 * E * sind(2 * MP - M) + 0.00032 * E * sind(M + 2 * F) + 0.00032 * E * sind(M - 2 * F) - 0.00028 * E * E * sind(MP + 2 * M) + 0.00027 * E * sind(2 * MP + M) - 0.00017 * sind(Omega);\n//   // Next term is w add for first quarter & subtract for second\n//   JDE = JDE + (0.00306 - 0.00038 * E * cosd(M) + 0.00026 * cosd(MP) - 0.00002 * cosd(MP - M) + 0.00002 * cosd(MP + M) + 0.00002 * cosd(2 * F));\n\n//   quarters[1] = JDE + 0.000325 * sind(A[1]) + 0.000165 * sind(A[2]) + 0.000164 * sind(A[3]) + 0.000126 * sind(A[4]) + 0.000110 * sind(A[5]) + 0.000062 * sind(A[6]) + 0.000060 * sind(A[7]);\n\n//   // Full moon k=k+0.5\n//   JDE = JDE0 + 29.530588853 * 0.5;\n//   // Already added 0.25 for first quarter\n//   M = rev(M + 29.10535669 * 0.25);\n//   MP = rev(MP + 385.81693528 * 0.25);\n//   F = rev(F + 390.67050274 * 0.25);\n//   Omega = rev(Omega - 1.56375580 * 0.25);\n//   A[1] = rev(A[1] + 0.107408 * 0.25);\n//   A[2] = rev(A[2] + 0.016321 * 0.25);\n//   A[3] = rev(A[3] + 26.651886 * 0.25);\n//   A[4] = rev(A[4] + 36.412478 * 0.25);\n//   A[5] = rev(A[5] + 18.206239 * 0.25);\n//   A[6] = rev(A[6] + 53.303771 * 0.25);\n//   A[7] = rev(A[7] + 2.453732 * 0.25);\n\n//   JDE = JDE - 0.40614 * sind(MP) + 0.17302 * E * sind(M) + 0.01614 * sind(2 * MP) + 0.01043 * sind(2 * F) + 0.00734 * E * sind(MP - M) - 0.00515 * E * sind(MP + M) + 0.00209 * E * E * sind(2 * M) - 0.00111 * sind(MP - 2 * F) - 0.00057 * sind(MP + 2 * F) + 0.00056 * E * sind(2 * MP + M) - 0.00042 * sind(3 * MP) + 0.00042 * E * sind(M + 2 * F) + 0.00038 * E * sind(M - 2 * F) - 0.00024 * E * sind(2 * MP - M) - 0.00017 * sind(Omega) - 0.00007 * sind(MP + 2 * M);\n\n//   quarters[2] = JDE + 0.000325 * sind(A[1]) + 0.000165 * sind(A[2]) + 0.000164 * sind(A[3]) + 0.000126 * sind(A[4]) + 0.000110 * sind(A[5]) + 0.000062 * sind(A[6]) + 0.000060 * sind(A[7]);\n\n//   // Last Quarter k=k+0.75\n//   JDE = JDE0 + 29.530588853 * 0.75;\n//   // Already added 0.5 for full moon\n//   M = rev(M + 29.10535669 * 0.25);\n//   MP = rev(MP + 385.81693528 * 0.25);\n//   F = rev(F + 390.67050274 * 0.25);\n//   Omega = rev(Omega - 1.56375580 * 0.25);\n//   A[1] = rev(A[1] + 0.107408 * 0.25);\n//   A[2] = rev(A[2] + 0.016321 * 0.25);\n//   A[3] = rev(A[3] + 26.651886 * 0.25);\n//   A[4] = rev(A[4] + 36.412478 * 0.25);\n//   A[5] = rev(A[5] + 18.206239 * 0.25);\n//   A[6] = rev(A[6] + 53.303771 * 0.25);\n//   A[7] = rev(A[7] + 2.453732 * 0.25);\n\n//   JDE = JDE - 0.62801 * sind(MP) + 0.17172 * E * sind(M) - 0.01183 * E * sind(MP + M) + 0.00862 * sind(2 * MP) + 0.00804 * sind(2 * F) + 0.00454 * E * sind(MP - M) + 0.00204 * E * E * sind(2 * M) - 0.00180 * sind(MP - 2 * F) - 0.00070 * sind(MP + 2 * F) - 0.00040 * sind(3 * MP) - 0.00034 * E * sind(2 * MP - M) + 0.00032 * E * sind(M + 2 * F) + 0.00032 * E * sind(M - 2 * F) - 0.00028 * E * E * sind(MP + 2 * M) + 0.00027 * E * sind(2 * MP + M) - 0.00017 * sind(Omega);\n//   // Next term is w add for first quarter & subtract for second\n//   JDE = JDE - (0.00306 - 0.00038 * E * cosd(M) + 0.00026 * cosd(MP) - 0.00002 * cosd(MP - M) + 0.00002 * cosd(MP + M) + 0.00002 * cosd(2 * F));\n\n//   quarters[3] = JDE + 0.000325 * sind(A[1]) + 0.000165 * sind(A[2]) + 0.000164 * sind(A[3]) + 0.000126 * sind(A[4]) + 0.000110 * sind(A[5]) + 0.000062 * sind(A[6]) + 0.000060 * sind(A[7]);\n\n//   return quarters;\n// }\n\nmodule.exports = Moon;\n","\"use strict\";\n\nvar bundleURL = {};\n\nfunction getBundleURLCached(id) {\n  var value = bundleURL[id];\n\n  if (!value) {\n    value = getBundleURL();\n    bundleURL[id] = value;\n  }\n\n  return value;\n}\n\nfunction getBundleURL() {\n  try {\n    throw new Error();\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp):\\/\\/[^)\\n]+/g);\n\n    if (matches) {\n      // The first two stack frames will be this function and getBundleURLCached.\n      // Use the 3rd one, which will be a runtime in the original bundle.\n      return getBaseURL(matches[2]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n} // TODO: Replace uses with `new URL(url).origin` when ie11 is no longer supported.\n\n\nfunction getOrigin(url) {\n  var matches = ('' + url).match(/(https?|file|ftp):\\/\\/[^/]+/);\n\n  if (!matches) {\n    throw new Error('Origin not found');\n  }\n\n  return matches[0];\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\nexports.getOrigin = getOrigin;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"lXpII\\\":\\\"index.bfe6e757.js\\\",\\\"1ZyPq\\\":\\\"service-worker.js\\\"}\"));","'use strict';\n\nmodule.exports = require('./src/solarCalc.js');\n","function getPartNightAndHijri(fajrhour, fajrmin, magribhour, magribmin) {\r\n    let magribDate = new Date()\r\n    let fajrDate = new Date(magribDate)\r\n    magribDate.setHours(magribhour)\r\n    magribDate.setMinutes(magribmin)\r\n    fajrDate.setHours(fajrhour)\r\n    fajrDate.setMinutes(fajrmin)\r\n\r\n    let diff;\r\n    // Calculate the time from fajr to magrib and subtract it with 1 day in millis to get the time between magrib and fajr\r\n    if (magribDate > fajrDate)\r\n        diff = 86400000 - (magribDate - fajrDate)\r\n    // Calculate the time from magrib to fajr as fajrDate is bigger than magribDate\r\n    else\r\n        diff = fajrDate - magribDate\r\n    let twothirdNight = new Date(magribDate.getTime() + (diff * 2 / 3))\r\n    let halfNight = new Date(magribDate.getTime() + (diff * 1 / 2))\r\n\r\n    let todayHijri = new Date();\r\n    // if sun has already set, then increase the date by 1 day\r\n    if(magribDate<todayHijri)\r\n    todayHijri.setDate(todayHijri.getDate() + 1)\r\n\r\n    return [halfNight, twothirdNight, todayHijri]\r\n\r\n}\r\n\r\nwindow.setPartNightAndHijri = function () {\r\n    if (document.querySelector('#fajrtime').value != '' && document.querySelector('#magribtime').value != '') {\r\n        let [halfNight, twothirdNight, hijriDate] = getPartNightAndHijri(...document.querySelector('#fajrtime').value.split(':'), ...document.querySelector('#magribtime').value.split(':'))\r\n\r\n        document.querySelector('#lastthird').innerText = twothirdNight.toLocaleString('default', { hour: 'numeric', minute: 'numeric' })\r\n        document.querySelector('#midnight').innerText = halfNight.toLocaleString('default', { hour: 'numeric', minute: 'numeric' }) \r\n        \r\n        let dateoffset = parseInt(document.querySelector('#dateoffset').value || '0')\r\n        Cookies.set('dateoffset', dateoffset, { expires: 36500 })\r\n        hijriDate.setDate(hijriDate.getDate() + dateoffset)\r\n        let hijriString = new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'numeric',day: 'numeric',calendar:'islamic'}).format(hijriDate)\r\n        let hijriArr = hijriString.split(' ')[0].split('/')\r\n        document.querySelector('#hijridate').innerText =  hijriArr[1]+ ' ' + IslamicMonths[hijriArr[0]-1]   + ' ' + hijriArr[2] + ' AH'\r\n        // new Intl.DateTimeFormat(['islamic','islamic-tbla','islamic-umalqura','islamic-rgsa','islamic-civil'].map(e=>'en-u-ca-'+e),{dateStyle:'long' }).format(hijriDate)\r\n        document.querySelector('#datespan').removeAttribute(\"hidden\")   \r\n        }\r\n}\r\n\r\nwindow.autoDetectWithCoords = function () {\r\n    if ('geolocation' in navigator)\r\n        navigator.geolocation.getCurrentPosition(pos => {\r\n            var solar = new SolarCalc(new Date(), pos.coords.latitude, pos.coords.longitude);\r\n            let fajrDate = solar.astronomicalDawn;\r\n            let magribDate = solar.sunset;\r\n\r\n            document.querySelector('#fajrtime').value = fajrDate.toLocaleString('default', { hour: 'numeric', minute: 'numeric', hour12: false })\r\n            document.querySelector('#magribtime').value = magribDate.toLocaleString('default', { hour: 'numeric', minute: 'numeric', hour12: false })\r\n\r\n            setPartNightAndHijri()\r\n\r\n\r\n        })\r\n\r\n\r\n\r\n\r\n}\r\n\r\n// Register Service worker for Add to Home Screen option to work\r\nif ('serviceWorker' in navigator) { navigator.serviceWorker.register(new URL('service-worker.js', import.meta.url)) }\r\n\r\nfunction ready() {\r\n    var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle=\"tooltip\"]'))\r\n    var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {\r\n        return new bootstrap.Tooltip(tooltipTriggerEl)\r\n    })\r\n\r\n    document.querySelector('#dateoffset').value = Cookies.get('dateoffset') || '0'\r\n\r\n\r\n}\r\n\r\n\r\nimport * as SolarCalc from 'solar-calc'\r\nimport Cookies from 'js-cookie'\r\nvar IslamicMonths = [\"Muharram\",\"Safar\",\"Rabiʻ I\",\"Rabiʻ II\",\"Jumada I\",\"Jumada II\",\"Rajab\",\"Shaʻban\",\"Ramadan\",\"Shawwal\",\"Dhuʻl-Qiʻdah\",\"Dhuʻl-Hijjah\"]\r\ndocument.addEventListener(\"DOMContentLoaded\", ready);\r\n","/*! js-cookie v3.0.1 | MIT */\n;\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = global || self, (function () {\n    var current = global.Cookies;\n    var exports = global.Cookies = factory();\n    exports.noConflict = function () { global.Cookies = current; return exports; };\n  }()));\n}(this, (function () { 'use strict';\n\n  /* eslint-disable no-var */\n  function assign (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        target[key] = source[key];\n      }\n    }\n    return target\n  }\n  /* eslint-enable no-var */\n\n  /* eslint-disable no-var */\n  var defaultConverter = {\n    read: function (value) {\n      if (value[0] === '\"') {\n        value = value.slice(1, -1);\n      }\n      return value.replace(/(%[\\dA-F]{2})+/gi, decodeURIComponent)\n    },\n    write: function (value) {\n      return encodeURIComponent(value).replace(\n        /%(2[346BF]|3[AC-F]|40|5[BDE]|60|7[BCD])/g,\n        decodeURIComponent\n      )\n    }\n  };\n  /* eslint-enable no-var */\n\n  /* eslint-disable no-var */\n\n  function init (converter, defaultAttributes) {\n    function set (key, value, attributes) {\n      if (typeof document === 'undefined') {\n        return\n      }\n\n      attributes = assign({}, defaultAttributes, attributes);\n\n      if (typeof attributes.expires === 'number') {\n        attributes.expires = new Date(Date.now() + attributes.expires * 864e5);\n      }\n      if (attributes.expires) {\n        attributes.expires = attributes.expires.toUTCString();\n      }\n\n      key = encodeURIComponent(key)\n        .replace(/%(2[346B]|5E|60|7C)/g, decodeURIComponent)\n        .replace(/[()]/g, escape);\n\n      var stringifiedAttributes = '';\n      for (var attributeName in attributes) {\n        if (!attributes[attributeName]) {\n          continue\n        }\n\n        stringifiedAttributes += '; ' + attributeName;\n\n        if (attributes[attributeName] === true) {\n          continue\n        }\n\n        // Considers RFC 6265 section 5.2:\n        // ...\n        // 3.  If the remaining unparsed-attributes contains a %x3B (\";\")\n        //     character:\n        // Consume the characters of the unparsed-attributes up to,\n        // not including, the first %x3B (\";\") character.\n        // ...\n        stringifiedAttributes += '=' + attributes[attributeName].split(';')[0];\n      }\n\n      return (document.cookie =\n        key + '=' + converter.write(value, key) + stringifiedAttributes)\n    }\n\n    function get (key) {\n      if (typeof document === 'undefined' || (arguments.length && !key)) {\n        return\n      }\n\n      // To prevent the for loop in the first place assign an empty array\n      // in case there are no cookies at all.\n      var cookies = document.cookie ? document.cookie.split('; ') : [];\n      var jar = {};\n      for (var i = 0; i < cookies.length; i++) {\n        var parts = cookies[i].split('=');\n        var value = parts.slice(1).join('=');\n\n        try {\n          var foundKey = decodeURIComponent(parts[0]);\n          jar[foundKey] = converter.read(value, foundKey);\n\n          if (key === foundKey) {\n            break\n          }\n        } catch (e) {}\n      }\n\n      return key ? jar[key] : jar\n    }\n\n    return Object.create(\n      {\n        set: set,\n        get: get,\n        remove: function (key, attributes) {\n          set(\n            key,\n            '',\n            assign({}, attributes, {\n              expires: -1\n            })\n          );\n        },\n        withAttributes: function (attributes) {\n          return init(this.converter, assign({}, this.attributes, attributes))\n        },\n        withConverter: function (converter) {\n          return init(assign({}, this.converter, converter), this.attributes)\n        }\n      },\n      {\n        attributes: { value: Object.freeze(defaultAttributes) },\n        converter: { value: Object.freeze(converter) }\n      }\n    )\n  }\n\n  var api = init(defaultConverter, { path: '/' });\n  /* eslint-enable no-var */\n\n  return api;\n\n})));\n","module.exports = require('./helpers/bundle-url').getBundleURL('lXpII') + require('./helpers/bundle-manifest').resolve(\"1ZyPq\");"],"names":["instance","Constructor","TypeError","$a4f76c82217442a5$var$_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","iter","Symbol","iterator","toString","call","Array","from","arr","isArray","$c05b6cf317781764$export$2e2bcd8739ae039","$c46dd327d17bb5e6$export$2e2bcd8739ae039","$ab0e56293ae73a76$export$2e2bcd8739ae039","arr2","$19ba95953c0b3914$export$2e2bcd8739ae039","$e0397ad0cf8bc90a$export$2e2bcd8739ae039","$be8227c7ee2b94f0$export$6503ec6e8aabbaf","$be8227c7ee2b94f0$export$f7ad0328861e2f03","$be8227c7ee2b94f0$var$mapping","pairs","keys","id","resolved","Error","$69bd25babaa5d777$var$degreesBelowHorizon","$69bd25babaa5d777$var$SolarCalc","date","latitude","longitude","this","lat","sun","$fJTwY","moon","$evd6Q","solarNoon","timeAtAngle","civilDawn","civilDusk","astronomicalDusk","astronomicalDawn","distance","illuminosity","sunAltitude","module","exports","$b7562241ce966f1d$var$Sun","julianDate","year","getFullYear","month","getMonth","day","getDate","A","Math","floor","B","$b7562241ce966f1d$var$getJD","jd","eqTime","$b7562241ce966f1d$var$calcEquationOfTime","$b7562241ce966f1d$var$calcTimeJulianCent","newt","solNoonLocal","$b7562241ce966f1d$var$formatDate","$b7562241ce966f1d$var$calcSolNoon","angle","rising","rise","JD","timeUTC","$b7562241ce966f1d$var$calcSunriseSetUTC","newTimeUTC","$b7562241ce966f1d$var$isNumber","doy","$b7562241ce966f1d$var$calcDoyFromJD","$b7562241ce966f1d$var$dayString","$b7562241ce966f1d$var$calcJDofNextPrevRiseSet","$b7562241ce966f1d$var$calcSunriseSet","solarDec","$b7562241ce966f1d$var$degToRad","cos","$b7562241ce966f1d$var$radToDeg","asin","sin","minutes","seconds","Date","UTC","z","f","alpha","yr","C","D","E","k","angleRad","PI","angleDeg","$b7562241ce966f1d$var$calcGeomMeanLongSun","t","L0","$b7562241ce966f1d$var$calcGeomMeanAnomalySun","$b7562241ce966f1d$var$calcSunTrueLong","l0","c","mrad","$b7562241ce966f1d$var$calcSunEqOfCenter","$b7562241ce966f1d$var$calcObliquityCorrection","e0","$b7562241ce966f1d$var$calcMeanObliquityOfEcliptic","omega","$b7562241ce966f1d$var$calcSunDeclination","e","lambda","$b7562241ce966f1d$var$calcSunApparentLong","sint","epsilon","$b7562241ce966f1d$var$calcEccentricityEarthOrbit","m","y","tan","sin2l0","sinm","inputVal","oneDecimal","inputStr","oneChar","charAt","hourAngle","latRad","sdRad","HAarg","acos","$b7562241ce966f1d$var$calcHourAngle","next","type","julianday","increment","time","$a8ee212b4f9fd573$var$Moon","$a8ee212b4f9fd573$var$getJD","T","M","T2","T3","$a8ee212b4f9fd573$var$rev","T4","$a8ee212b4f9fd573$var$sind","MP","LP","F","A1","A2","A3","E2","Sl","Sr","Eterm","abs","$a8ee212b4f9fd573$var$T45AM","$a8ee212b4f9fd573$var$T45AL","$a8ee212b4f9fd573$var$T45AD","$a8ee212b4f9fd573$var$T45AMP","$a8ee212b4f9fd573$var$T45AF","$a8ee212b4f9fd573$var$T45AR","$a8ee212b4f9fd573$var$cosd","Sb","$a8ee212b4f9fd573$var$T45BM","$a8ee212b4f9fd573$var$T45BL","$a8ee212b4f9fd573$var$T45BD","$a8ee212b4f9fd573$var$T45BMP","$a8ee212b4f9fd573$var$T45BF","mglong","mglat","mr","round","obl","ra","x","atan","dec","$a8ee212b4f9fd573$var$moonPos","$404858fdeb70fa97$export$bdfd709ae4826697","$404858fdeb70fa97$var$bundleURL","$404858fdeb70fa97$var$getBaseURL","url","replace","value","err","matches","stack","match","$404858fdeb70fa97$var$getBundleURL","parcelRequire","register","JSON","parse","$ac481ccd198811a9$exports","$8606f9f62c498e91$var$getPartNightAndHijri","fajrhour","fajrmin","magribhour","magribmin","diff","magribDate","fajrDate","setHours","setMinutes","twothirdNight","getTime","halfNight","todayHijri","setDate","global","factory","current","$da4b847204f54e01$exports","define","amd","self","Cookies","noConflict","assign","arguments","source","api","init","converter1","defaultAttributes","set","attributes","document","expires","now","toUTCString","encodeURIComponent","decodeURIComponent","escape","stringifiedAttributes","attributeName","split","cookie","write","create","get","cookies","jar","parts","slice","join","foundKey","read","remove","withAttributes","converter","withConverter","freeze","path","window","setPartNightAndHijri","querySelector","ref","$75a3530466219cbb$export$2e2bcd8739ae039","apply","$49c94d0142231589$export$2e2bcd8739ae039","concat","hijriDate","innerText","toLocaleString","hour","minute","dateoffset","parseInt","$parcel$interopDefault","hijriArr","Intl","DateTimeFormat","calendar","format","$8606f9f62c498e91$var$IslamicMonths","removeAttribute","autoDetectWithCoords","navigator","geolocation","getCurrentPosition","pos","solar","coords","sunset","hour12","$26f5c722bfb1b4da$exports","getBundleURL","resolve","serviceWorker","addEventListener","querySelectorAll","map","tooltipTriggerEl","bootstrap","Tooltip"],"version":3,"file":"index.bfe6e757.js.map"}